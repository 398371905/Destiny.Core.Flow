{
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft": "Warning",
      "Microsoft.Hosting.Lifetime": "Information"
    }
  },
  "Console": {
    "LogLevel": {
      "Default": "Information"
    }
  },

  "Serilog": {
    "Using": [ "Serilog.Sinks.Console" ],
    "LevelSwitches": { "$controlSwitch": "Verbose" },
    "MinimumLevel": {
      "Default": "Debug",
      "Override": {
        "Microsoft": "Warning",
        "MyApp.Something.Tricky": "Verbose"
      }
    },
    "WriteTo:Sublogger": {
      "Name": "Logger",
      "Args": {
        "configureLogger": {
          "MinimumLevel": "Verbose",
          "WriteTo": [
            {
              "Name": "Console",
              "Args": {
                "outputTemplate": "[{Timestamp:HH:mm:ss} {SourceContext} [{Level}] {Message}{NewLine}{Exception}",
                "theme": "Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme::Grayscale, Serilog.Sinks.Console"
              }
            }
          ]
        },
        "restrictedToMinimumLevel": "Verbose",
        "levelSwitch": "$controlSwitch"
      }
    },
    "WriteTo:Async": {
      "Name": "Async",
      "Args": {
        "configure": [
          {
            "Name": "File",
            "Args": {
              "path": "Logs1/serilog-configuration-sample.txt",
              "outputTemplate": "{Timestamp:o} [{Level:u3}] ({Application}/{MachineName}/{ThreadId}/{ThreadName}) {Message}{NewLine}{Exception}"
            }
          }
        ]
      }
    },
    "WriteTo:ConditionalSink": {
      "Name": "Conditional",
      "Args": {
        "expression": "@Level in ['Error', 'Fatal']",
        "configureSink": [
          {
            "Name": "File",
            "Args": {
              "path": "%TEMP%/Logs1/err/.txt",
              "rollingInterval": "Day"
            }
          }
        ]
      }
    },


  },
  "AllowedHosts": "*",
  "Destiny": {
    "Swagger": {
      "Title": "Destiny.Core.Flow.API",
      "Version": "v1",
      "Url": "/swagger/v1/swagger.json"
    },
    "AopManager": {
      "AopTran": {
        "Enabled": true //是否启用全局事务日志
      },
      "RedisCachingAop": {
        "Enabled": false //是否启用全局RedisAOP缓存
      },
      "LogAop": {
        "Enabled": false //是否启用全局AOP日志
      }
    },
    "InterceptorsModule": "Destiny.Core.Flow.Services", //AOP需要代理的层；这个位置根据生成项目的名称去做代理;我这里代理的是服务层
    "DbContext": {
      "MysqlConnectionString": "DestinyCoreDb.txt" //开发用数据库
    },
    "Jwt": {
      "SecretKey": "{A4ECDB4C-DCDE-4BEF-B1B3-99E22A5419BE}",
      "Issuer": "Destiny",
      "Audience": "Destiny",
      "ExpireMins": 10080
    },
    "Cors": {
      "PolicyName": "Destiny.Core.Flow.API",
      "Url": "http://localhost:5001,http://localhost:8080,http://localhost:8848" ////支持多个域名端口，注意端口号后不要带/斜杆：比如localhost:8000/，是错的
    }
  }
}
